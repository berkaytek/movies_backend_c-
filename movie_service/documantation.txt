1-)

Download .csv file from open source website

2-) Add csv to database:

Option 1: Create table with corresponding properties and import csv directly
Option 2: Use a tool like csvkit. For example: 
    csvsql --db postgresql://root:root@localhost:5432/movies_database --insert your_csv.csv

3- ) For ease of use, you can scaffold using command (You still need to install enitityframework core for postgresql and design packages for project and global entity framework core) :
dotnet ef dbcontext scaffold "Host=localhost; Database=movies_database; Username=root; Password=root" Npgsql.EntityFrameworkCore.PostgreSQL

4- ) Now we can use this entity on our service. You can inject the given context into your services (avoid creating new instances using new()), however you need to add context to your services (on program.cs on .NET 6 and so on)

5- ) You can define CRUD operations in your service easily by using EF core, I recommend creating and Interface and use dependency injection to inject your service to the controllers. 

6 -) I have implemented dependency injection using builder in Program.cs and injected it into our controller, MovieController.cs. 

7- ) So far we implemented all parts of Three Tier Architecture, Data Access Layer, Bussiness Access Layer and Application Presentation layer

8- ) For good practices, I do my logic in services instead of controller and try to keep controller functions readable and short.

9- ) At this point you can easily add new methods in service and publish them in controller

Optional - I highly recommend removing any fields without id and also without any posterPath using SQL query:
    

